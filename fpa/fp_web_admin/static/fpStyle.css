/*
body {
    height:100%;
}
*/


button {
    color:green;
}
input[type=submit] {
    color:green;
}

/*
 * not_too_wide
 * Eg to limit length of text lines.
 */
.not_too_wide {
    max-width: 500px;
}

/*** header: *********************************************************
 * Style for the header across the top of all pages.
 */
#header {
	background-color: #eeeeee;
	border-bottom: 1px solid #000000;
	padding: 10px 0px;
    height:100px;
}

#header img{
    float: left;
    height:100px;
    width:100px;
}

/*-- HeaderMenu: ---------------------------------------*/
#headerMenu {
    white-space: nowrap;
	list-style: none;
	margin: 0;
	padding: 0;
}
#headerMenu > li {
    /* Note we want this menu horizontal, this can be achieved with "float:left",
     * but then the menu will wrap if browser window is made too narrow. So instead
     * we are using "display:inline-block", in conjunction with the "white-space:nowrap"
     * in the parent. This works, except the menu items get an extra separation added between
     * them, which is - to some extent - fixed by the negative right margin command.
     * See http://stackoverflow.com/questions/13092143/prevent-css-horizontal-drop-down-menu-from-wrapping.
     */
	width: 100px;
    display: inline-block;
    margin: 0 -3px 0 0;
}
#headerMenu li a {
	color: #818181;
	/*font-size: 15px;*/
	line-height: 30px;
	text-decoration: none;
}
#headerMenu li a:hover {
	color: #000000;
}
#headerMenu li.active a {
	color: #f99600;
}

/*------------------------------ CONTENTS ------------------------------*/
#contents {
	min-height: 510px;
	width: 880px;
	margin: 0 auto;
	padding: 54px 40px;
	list-style: none;
}
.date {
	float: left;
	height: 78px;
	width: 70px;
	margin-right: 20px;
	border: 1px solid #d5d5d5;
	text-align: center;
}
.date p {
	margin: 12px 0 0;
}
.date p span {
	display: block;
	font-size: 30px;
	margin-bottom: 6px;
}
/** main **/
.main {
	float: left;
	background: url(../images/divider.png) repeat-y right top;
	min-height: 100px;
	width: 620px;
	padding-right: 24px;
}
.main h1, .sidebar h1 {
	margin: 0 0 12px;
	position: relative;
	top: -18px;
}
.main h2 span {
	display: block;
	font-size: 12px;
}

/*** news: ********************************/
.news {
	list-style: none;
}
.news>li {
	border-top: 1px solid #d5d5d5;
	padding: 24px 30px 0 100px;
	position: relative;
}
.news>li>li {
	border-top: 1px solid #d5d5d5;
	padding: 24px 30px 0 100px;
	position: relative;
}
.news li .date {
	float: none;
	position: absolute;
	left: 0;
	top: 30px;
}
.news li > p span, .post > span {
	display: block;
	text-align: right;
}
.news li {
	color: #585858;
}

/*** infoText: ***/
.infoText p  {
      color: #585858;
      font-size: 16px;
      line-height: 24px;
      margin: 0 0 30px;
}
.infoText p a {
      color: #585858;
}
/*******************************************/

h1 {
	color: #3e3e3e;
	font-size: 30px;
	font-weight: normal;
	line-height: 30px;
	margin: 0 0 30px;
}
h2 {
	color: #2c2c2c;
	font-size: 24px;
	font-weight: normal;
	line-height: 24px;
	margin: 0 0 12px;
}


/* Paragraph styles, but this means text not in paragraph is styled differently
p {
	color: #585858;
	font-size: 16px;
	line-height: 24px;
	margin: 0 0 30px;
}
p a {
	color: #585858;
}*/

#tagline h1 {
	margin-left: 20px;
}
#tagline > div {
	float: left;
	width: 400px;
	margin: 0 20px;
}
#contents .features {
	width: 810px;
	margin: 0 auto;
}
.features > div {
	display: inline-block;
	margin: 0 0 30px;
}
.features > div img {
	float: left;
	margin-right: 20px;
	margin-top: 36px;
}

.description {
    color: #585858;
}


#about {
	width: 740px;
	margin: 0 auto;
}
#about h1, .section h1 {
	border-bottom: 1px solid #e0e0e0;
	padding-bottom: 12px;
}
.section {
	float: left;
	width: 390px;
	margin-right: 50px;
}
.section h1 {
	margin-bottom: 18px;
}


.contact {
	background-color: #f8f8f8;
	width: 270px;
	padding: 124px 60px;
	text-align: center;
}
.contact p span {
	color: #2c2c2c;
	display: block;
	font-size: 30px;
	line-height: 36px;
	padding: 18px 0;
}

/*** footer: ********************************/
#footer {
    clear:both;
	background-color: #eeeeee;
	border-top: 1px solid #000000;
	padding: 10px 0px;
    height:30px;
}

/*** data pages: ****************************************
 *
 * The data section may be multiple columns side by side.
 * To have these equal height, we are using css tables.
 * dataWrapper is the table, and the columns (table-cells)
 * are dataLeftBar, dataContent, and dataContentHelp
 *
 */

.fred {
    height:100px;
    background-color:yellow;
}
#dpwhWrapper {
    width: 100%;
    display:table;
    word-wrap: normal;
    overflow: hidden;
}
#dpwhWrapperMain {
    display:table-cell;
}
#contentWrapper {
    display:table
}
#dataWrapper {
    overflow: hidden;
    display: table;  /* Using table so as to get equal column height. */
    /*border: solid 1px*/
    /*overflow: auto; /* so the size of the wrapper is alway the size of the longest content */
}

#dataLeftBar {
    width: 150px;
    min-width: 150px;
    display: table-cell;
    vertical-align: top;    /* without this, vertical position is affected by html in
                             * dataContent (when using tables for equal column heights)
                             */
    word-wrap: break-word;
    background: #eeeeee;
    padding-top: 20px;
    padding-bottom: 50px;
    /*float: left; an alternative to tables, but don't get equal column height*/
}

.dataContent {
    display: table-cell;
    vertical-align: top;
    width: 100%;
    padding: 15px;
    word-wrap: normal;
    overflow: hidden;
}

.dataContentHelp{
    vertical-align: top;
    display: table-cell;
    color:green;
    background: #ddeedd;
    width: 250px;
    min-width: 250px;
    padding-top: 20px;
    padding-bottom: 50px;
    padding-left: 10px;
}

/* This is a div containing the help button.
 * The button itself is styled as #helpButton below
 */
.dataContentHelpButton{
    vertical-align: top;
    display: table-cell;
    color:green;
    width:100pc;  /* NB, pc is NOT percent, but one sixth inch, so this is
                   * just a big value to force the button over to the right.
                   */
    min-width: 250px;
    padding-top: 20px;
    padding-left: 10px;
}

#helpButton {
    margin:0px;  /* does nothing */
    padding: 0px;  /* does nothing */
    width: 230px;
    /* width:100%
    height:100%*/
    float:right;
}

.dataContentTop {
    /*background-color:pink;*/
}
/*
.dataContentTop button {
    align:right;
    background:#111111;
}
*/

/*** user input forms: ******************************************/

.userInputForm button{
clear:both;
margin-left:150px;
width:125px;
height:31px;
background:#666666 url(img/button.png) no-repeat;
text-align:center;
line-height:31px;
color:#FFFFFF;
font-size:11px;
font-weight:bold;
}

.userInputForm td{
vertical-align:top;
}

.userInputForm label{
display:block;
/*font-weight:bold;*/
text-align:right;
vertical-align:top;
width:140px;
float:left;
}

.userInputForm .small{
color:#666666;
display:block;
font-size:11px;
font-weight:normal;
text-align:right;
width:140px;
}

.userInputForm input:not(.nostyle),
.userInputForm select
.uifDiv
{
float:left;
/*font-size:12px;
padding:4px 2px;
border:solid 1px #aacfe4;*/
width:200px;
margin-top:2px;
margin-right:0;
margin-bottom:20px;
margin-left:10px;
}

/* Problem here is that there may not be a single input element.
radio buttons for example. We probably want some container class.
*/
.userInputForm input[type="radio"] {
margin-top:2px;
margin-right:3px;
margin-bottom:20px;
margin-left:10px;
}


/*** Tabs: ********************************************************************/
/* Now all done from java script, except the hover, which we don't really need
/*body { font-size: 80%; font-family: 'Lucida Grande', Verdana, Arial, Sans-Serif; }*/
/*
ul#tabs { list-style-type: none; margin: 30px 0 0 0; padding: 0 0 0.3em 0; }
ul#tabs li { display: inline; }
ul#tabs li a { color: #42454a; background-color: #dedbde; border: 1px solid #c9c3ba; border-bottom: none; padding: 0.3em; text-decoration: none; }
ul#tabs li a:hover { background-color: #f1f0ee; }
ul#tabs li a.selected { color: #000; background-color: #f1f0ee; font-weight: bold; padding: 0.7em 0.3em 0.38em 0.3em; }
div.tabContent { border: 1px solid #c9c3ba; padding: 0.5em; background-color: #f1f0ee; }
div.tabContent.hide { display: none; }

#headerMenu {
    white-space: nowrap;
    list-style: none;
    margin: 0;
    padding: 0;
}
#headerMenu > li {
    /* Note we want this menu horizontal, this can be achieved with "float:left",
     * but then the menu will wrap if browser window is made too narrow. So instead
     * we are using "display:inline-block", in conjunction with the "white-space:nowrap"
     * in the parent. This works, except the menu items get an extra separation added between
     * them, which is - to some extent - fixed by the negative right margin command.
     * See http://stackoverflow.com/questions/13092143/prevent-css-horizontal-drop-down-menu-from-wrapping.
     /
    width: 100px;
    display: inline-block;
    margin: 0 -3px 0 0;
}
#headerMenu li a {
    color: #818181;
    /*font-size: 15px;/
    line-height: 30px;
    text-decoration: none;
}
#headerMenu li a:hover {
    color: #000000;
}
#headerMenu li.active a {
    color: #f99600;
}

*/
/*
ul#tabs {
    list-style-type: none;
    white-space: nowrap;
    margin: 30px 0 0 0;
    padding: 0 0 0.3em 0;
}
/*
ul#tabs > li {
    //min-width: 120px;
    display: inline-block;
    margin: 0;
}
/*
ul#tabs li a {
    color: #42454a;
    min-width: 120px;
    display: block;
    //background-color: #dedbde;
    background-color: pink;
    border: 1px solid #c9c3ba;
    border-bottom: none;
    padding: 0.3em;
    text-decoration: none;
    margin: 0;
}
ul#tabs li a:hover { background-color: #f1f0ee; }

ul#tabs li a.selected {
    color: #000;
    background-color: #f1f0ee;
    font-weight: bold;
    padding: 0.7em 0.3em 0.38em 0.3em;
    //padding: 0.3em;
}

div.tabContent {
    border: 1px solid #c9c3ba;
    padding: 0.5em;
}
div.tabContent.hide {
    display: none;
}
*/
/******************************************************************************/
